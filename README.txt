Content of this folder was generated by GridGain Web Console
=================================================================

Project structure:
    /jdbc-drivers - this folder should contains proprietary JDBC drivers.
    /src - this folder contains generated java code.
    /src/main/java/config - this folder contains generated java classes with cluster configuration from code.
    /src/main/java/startup - this folder contains generated java classes with server and client nodes startup code.
    /src/main/java/[model] - this optional folder will be named as package name for your POJO classes and contain generated POJO files.
    /src/main/resources - this folder contains generated configurations in XML format and secret.properties file with security sensitive information if any.
    Dockerfile - sample Docker file. With this file you could package Ignite deployment with all the dependencies into a standard container.
    pom.xml - generated Maven project description, could be used to open generated project in IDE or build with Maven.
    README.txt - this file.

Ignite ships with CacheJdbcPojoStore, which is out-of-the-box JDBC implementation of the IgniteCacheStore 
interface, and automatically handles all the write-through and read-through logic.

You can use generated configuration and POJO classes as part of your application.

Note, in case of using proprietary JDBC drivers (Oracle, IBM DB2)
you should download them manually and copy into ./jdbc-drivers folder.